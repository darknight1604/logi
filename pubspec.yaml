name: logi
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: "none" # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.17.6 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

  # Widgets that make it easy to integrate blocs and cubits into Flutter. Built to work with package:bloc
  # https://pub.dev/packages/flutter_bloc
  flutter_bloc: ^8.1.1
  firebase_core: ^1.20.1

  #  A Flutter plugin to use the Cloud Firestore API.
  # https://pub.dev/packages/cloud_firestore
  cloud_firestore: ^3.4.4

  # Being able to compare objects in Dart often involves having to override the == operator as well as hashCode.
  # https://pub.dev/packages/equatable
  equatable: ^2.0.3

  #  A dart-native implementation of the Firebase Auth and Firestore SDKs
  # https://pub.dev/packages/firedart
  firedart: ^0.9.0+1

  # Internationalization for your Flutter Apps
  # https://pub.dev/packages/easy_localization
  # easy_localization: ^3.0.0
  easy_localization:
    git:
      url: https://github.com/onpointvn/easy_localization.git
      ref: v3.0.2

  # An extension to package:bloc which automatically persists and restores bloc and cubit states. Built to work with package:bloc.
  # https://pub.dev/packages/hydrated_bloc
  hydrated_bloc: ^8.1.0

  # A Flutter plugin for finding commonly used locations on the filesystem
  # https://pub.dev/packages/path_provider
  path_provider: ^2.0.11

  # Track log
  # https://pub.dev/packages/logger
  logger: ^1.1.0

  # Welcome to Freezed, yet another code generator for data-classes/unions/pattern-matching/cloning.
  # https://pub.dev/packages/freezed
  freezed: ^2.1.0+1

  # Annotations for freezed.
  # https://pub.dev/packages/freezed_annotation
  freezed_annotation: ^2.1.0

  # Defines the annotations used by json_serializable to create code for JSON serialization and deserialization.
  # https://pub.dev/packages/json_annotation
  json_annotation: ^4.6.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  build_runner:
  flutter_gen_runner:
  json_serializable: ^6.3.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/translations/
    - assets/configs/config.json

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
